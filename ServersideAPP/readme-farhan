Generate Contract Wrapper in Java can be done with two different ways
----------------------------------------------------------------------------------
A) MANUAL WRAPPER GENERATOR
-------------------------
Step 1:
Compile and generate bin and abi files (we are using "--overwrite" if directory has same name classes then regenerate and over write them):
------------------------------------------
D:\piiVerificationProject\ServersideAPP> "./tools/solidity-windows/solc.exe" "../EthereumContracts/src/contracts/AuthorizedPII.sol" "--bin"  "--abi" "--optimize" "-o" "./target" "--overwrite"

Compiler run successful. Artifact(s) can be found in directory ../../../solidity_contracts/identityv2/.


Step 2:
Generate Java Wrapper (The last part of the command should be change based on the versions / also add Deprecated annotation in old one if you create more than one version of the wrapper)
--------------------------------------------
D:\piiVerificationProject\ServersideAPP> "./tools/web3j-4.5.0/bin/web3j.bat" "solidity" "generate" "-b" "./target/AuthorizedPII.bin"  "-a" "
./target/AuthorizedPII.abi" "-o" "./src/java/" "-p" "com.farhan.piiverification.blockchain.contracts.AuthorizedPII_v1"


B) AUTOMATIC WRAPPER GENERATOR
----------------------------

> Use contract-wrapper-gen.cmd file and it will generate the contracts.

---------------------------------------------------------------------------------------------------
Useful Link: https://www.youtube.com/watch?v=9p2ah3BBGLk&list=PLD_n_feSn9l3QoqgK4tmoWFda3ATglvwC&index=13

Connecting MetaMask:
====================

Since metamask is a plugin for browser we cannot connect our java server with that plugin so we have to create verification part
in nodejs .

1- Create a folder like i did in main\nodejs\src\ and create one index.js and then on command prompt and do cd.. to go one step back
and then install webpack as below

nodejs>npm install webpack webpack-cli webpack-dev-server --save-dev

2 - On command prompt write
nodejs>npx webpack-dev-server --https

and it will create a certificate for your nodejs server

..................................
NOTE: ISSUE "webpack not find module"
This issue to solve I had followed symlink and global installation : https://stackoverflow.com/questions/29492240/error-cannot-find-module-webpack
npm link webpack
...................................


So using npx webpack-dev-server --https will run the node server web app  just go to the https://localhost:8080 and you will see it.

NOTE: MAKE SURE TO USE HTTPS , THEN CLICK ADVANCE AND PROCEED TO LOCALHOST (YOUR SSL MIGHT LOOK RED()



For metamask development help use : https://metamask.github.io/metamask-docs/API_Reference/Ethereum_Provider#ethereum.on(eventname%2C-callback
which is the best one. or the video as given above.



To create  a war file:
---------------------------
http://appsdeveloperblog.com/create-a-deployable-war-file-with-spring-boot/